// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  phone     String?
  role      String   @default("USER") // "ADMIN" or "USER"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  image       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  products    Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float?
  images      String   // JSON array of image URLs
  categoryId  Int
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  category    Category @relation(fields: [categoryId], references: [id])
}

model Project {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  images      String   // JSON array of image URLs
  location    String?
  completedAt DateTime?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Service {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  image       String?
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  senderId   Int
  receiverId Int
  isRead     Boolean  @default(false)
  createdAt  DateTime @default(now())
  
  sender     User @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  subject   String
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Settings {
  id               Int      @id @default(autoincrement())
  siteName         String   @default("Marble Co.")
  siteDescription  String   @default("Premium mermer ve doğal taş çözümleri")
  contactEmail     String   @default("info@marble.com")
  contactPhone     String   @default("+90 212 123 45 67")
  address          String   @default("İstanbul, Türkiye")
  facebookUrl      String   @default("")
  instagramUrl     String   @default("")
  twitterUrl       String   @default("")
  linkedinUrl      String   @default("")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
